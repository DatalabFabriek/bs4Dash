{"version":3,"sources":["accordions-binding.js","cards.js","controlbar.js","feedbacks.js","leftSidebar.js","miscellaneous.js","navbar.js","output-bindings.js","userMessages.js"],"names":["accordionBinding","Shiny","InputBinding","$","extend","find","scope","getValue","el","activeItem","index","setValue","value","removeClass","children","eq","addClass","click","trigger","receiveMessage","data","this","subscribe","callback","on","e","closest","hasClass","unsubscribe","off","inputBindings","register","cardBinding","config","parent","id","JSON","parse","html","visible","isCollapsed","display","css","isMaximized","hide","show","collapsible","collapsed","closable","maximizable","maximized","status","solidHeader","background","width","height","_updateWidth","o","n","toggleClass","action","isUserCard","isSocialCard","options","hasOwnProperty","newBoxClass","gradient","header","length","prepend","remove","append","title","newTitle","parseHTML","replaceWith","tools","insertAfter","stringify","CardWidget","setTimeout","event","cardSidebarBinding","initialize","transition","attr","parseInt","closeTranslationRate","contacts","openTranslationRate","transform","cardWrapper","self","target","currentTarget","showToast","controlbarToast","document","Toasts","close","autohide","delay","window","pinned","undefined","$pinIcon","init","controlbarBinding","controlbarOpen","ControlSidebar","addCustomMessageHandler","message","tooltipTarget","selector","tooltip","console","log","popoverTarget","popover","alertTarget","alertCl","alertTag","iconType","closeButton","titleTag","contentTag","elevation","warn","content","setInputValue","priority","alertId","alert","ensureActivatedTab","$tablinks","$startTab","filter","first","adminlte","Treeview","_jQueryInterface","call","tab","deactivateOtherTabs","not","parents","$obj","inputBinding","$menu","tabItemInputBinding","each","_getTabName","anchor","sidebarBinding","PushMenu","sidebarmenuExpandedInputBinding","$open","prev","$navbar","unbindAll","bindingNames","binding","bindAll","sortable","placeholder","connectWith","handle","forcePlaceholderSize","zIndex","navbarRight","insertBefore","$slideToTop","position","bottom","right","color","font-size","line-height","text-align","background-color","cursor","border-radius","z-index","opacity","scroll","scrollTop","is","fadeIn","fadeOut","animate","$help_switch_checkbox","type","class","$help_switch_container","one","getNavbarColor","navbar_all_colors","search","navbar_dark_skins","concat","$dark_mode_checkbox","newNavbarColor","split","trim","replace","updateNavbarTheme","prop","$dark_mode_icon","$dark_mode_container","hover","border-color","border-style","$main_header","forEach","indexOf","match","sidebarCl","sidebar_skins","updateSidebarTheme","sidebar_class","$sidebar","skin","accent_colors","updateAccentsTheme","accent_class","$body","controlbarCl","noControlbar","disableControlbar","controlbarSlide","disableSidebar","menuOutputBinding","OutputBinding","onValueError","err","renderError","renderValue","dependencies","deps","$html","renderHtml","className","initializeInputs","outputBindings","text","body","authorWrapper","dateWrapper","author","date","image","newMessageWrapper","newMessage","d","Date","month","getMonth","day","getDate","today","getFullYear"],"mappings":"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","file":"bs4Dash.min.js","sourceRoot":"../../bs4Dash-build","sourcesContent":["// This code creates an input binding for the accordion component\nvar accordionBinding = new Shiny.InputBinding();\n\n$.extend(accordionBinding, {\n  find: function(scope) {\n    return $(scope).find(\".accordion\");\n  },\n  // Given the DOM element for the input, return the value\n  getValue: function(el) {\n    // active is given by the setValue method\n    var activeItem = $(el).find(\".active\").index() + 1;\n    if (activeItem === 0) return;\n    // returns the index of the active item from the R point of view. It is possible\n    // that no item is shown at start. In this case,  NULL is returned\n    return activeItem;\n  },\n  \n  setValue: function(el, value) {\n    // remove active class from all other panels\n    $(el).find(\".active\").removeClass(\"active\");\n    \n    // add active class to current panel\n    $(el).children()\n     .eq(value - 1)\n     .addClass(\"active\");\n    \n    // click on the header to trigger a collapse\n    $(el)\n     .children()\n     .eq(value - 1)\n     .find('[data-toggle=\"collapse\"]')\n     .click();\n     \n     // trigger change to tell Shiny to update the value\n     $(el).trigger(\"change\");\n  },\n\n  // see updateAccordion\n  receiveMessage: function(el, data) {\n    this.setValue(el, data);\n  },\n\n  subscribe: function(el, callback) {\n    // cf setValue\n    $(el).on(\"change\", function(e) {\n      callback();\n    });\n    \n    // manual click will update\n    $(el).find('[data-toggle=\"collapse\"]').on(\"click\", function(e) {\n      if (!$(this).closest(\".card\").hasClass(\"active\")) {\n        $(el).find(\".active\").removeClass(\"active\");\n      } \n      $(this).closest(\".card\").addClass(\"active\");\n      callback();\n    });\n  },\n\n  unsubscribe: function(el) {\n    $(el).off(\".accordionBinding\");\n  }\n});\n\nShiny.inputBindings.register(accordionBinding, \"accordion-input\");","// Input binding\nvar cardBinding = new Shiny.InputBinding();\n\n$.extend(cardBinding, {\n\n  find: function (scope) {\n    return $(scope).find(\".card\");\n  },\n\n  // Given the DOM element for the input, return the value\n  getValue: function (el) {\n    var config = $(el).parent().find(\"script[data-for='\" + el.id + \"']\");\n    config = JSON.parse(config.html());\n\n    var isCollapsed = $(el).hasClass('collapsed-card');\n    var display = $(el).css('display');\n    var isMaximized = $(el).hasClass('maximized-card');\n\n    var visible;\n    if (display === \"none\") {\n      visible = false;\n    } else {\n      visible = true;\n    }\n\n    // toggle collapse button when maximized\n    if (isMaximized) {\n      $(el).find(\"[data-card-widget = 'collapse']\").hide();\n    } else {\n      $(el).find(\"[data-card-widget = 'collapse']\").show();\n    }\n\n    return {\n      collapsible: config.collapsible,\n      collapsed: isCollapsed,\n      closable: config.closable,\n      visible: visible,\n      maximizable: config.maximizable,\n      maximized: isMaximized,\n      status: config.status,\n      solidHeader: config.solidHeader,\n      background: config.background,\n      width: config.width,\n      height: config.height\n    }; // this will be a list in R\n  },\n  _updateWidth: function (el, o, n) {\n    $(el).parent().toggleClass(\"col-sm-\" + o);\n    $(el).parent().addClass(\"col-sm-\" + n);\n    // trigger resize so that output resize\n    $(el).trigger('resize');\n  },\n\n  setValue: function (el, value) {\n\n    var config = $(el).parent().find(\"script[data-for='\" + el.id + \"']\");\n    config = JSON.parse(config.html());\n\n    if (value.action === \"update\") {\n      var isUserCard = $(el).hasClass('user-card');\n      var isSocialCard = $(el).hasClass('social-card');\n      // To remove status explicitly set status = NULL in updateBox\n      if (value.options.hasOwnProperty(\"status\")) {\n        if (value.options.status !== config.status) {\n          // don't touch if null\n          if (config.status !== null) {\n            $(el).toggleClass(\"card-\" + config.status);\n          }\n          if (value.options.status !== null) {\n            $(el).addClass(\"card-\" + value.options.status);\n          }\n          config.status = value.options.status;\n        }\n      }\n      if (value.options.hasOwnProperty(\"solidHeader\")) {\n        // only update if config an new value are different\n        if (value.options.solidHeader !== config.solidHeader) {\n          $(el).toggleClass(\"card-outline\");\n          config.solidHeader = value.options.solidHeader;\n        }\n      }\n      // To remove background explicitly set background = NULL in updateBox\n      if (value.options.hasOwnProperty(\"background\")) {\n        if (value.options.background !== config.background) {\n          var newBoxClass;\n          if (config.gradient) {\n            newBoxClass = \"bg-gradient-\";\n          } else {\n            newBoxClass = \"bg-\";\n          }\n          // don't touch if null\n          if (config.background !== null) {\n            // if gradient, the class has a gradient at the end!\n            newBoxClass = newBoxClass + config.background;\n            // handle userBox\n            // for which we also have to toggle the header bg color\n            // and the box tools buttons color\n            if (isUserCard) {\n              var header = $(el).find('.widget-user-header');\n              $(header).toggleClass(newBoxClass);\n            }\n            $(el).toggleClass(newBoxClass);\n            $(el).find('.btn-tool').toggleClass(\"btn-\" + config.background);\n          }\n          if (value.options.background !== null) {\n            newBoxClass = newBoxClass + value.options.background;\n            if (isUserCard) {\n              var header = $(el).find('.widget-user-header');\n              $(header).addClass(newBoxClass);\n            }\n            $(el).addClass(newBoxClass);\n            $(el).find('.btn-tool').toggleClass(\"btn-\" + value.options.background);\n          }\n          config.background = value.options.background;\n        }\n      }\n      if (value.options.hasOwnProperty(\"width\")) {\n        if (value.options.width !== config.width) {\n          this._updateWidth(el, config.width, value.options.width);\n          config.width = value.options.width;\n        }\n      }\n      if (value.options.hasOwnProperty(\"height\")) {\n        if (value.options.height !== config.height) {\n          if (value.options.height === null) {\n            $(el).find(\".card-body\").css(\"height\", '');\n          } else {\n            $(el).find(\".card-body\").css(\"height\", value.options.height);\n          }\n\n          config.height = value.options.height;\n          // don't need to trigger resize since the output height\n          // is not controlled by the box size ...\n        }\n      }\n      if (value.options.hasOwnProperty(\"collapsible\")) {\n        if (value.options.collapsible !== config.collapsible) {\n          if (!value.options.collapsible) {\n            $(el).find('[data-card-widget = \"collapse\"]').remove();\n            config.collapsible = false;\n          } else {\n            // only add if no collapsible\n            if ($(el).find('[data-card-widget = \"collapse\"]').length === 0) {\n              $(el)\n                .find(\".card-tools.pull-right\")\n                .prepend($('<button class=\"btn btn-tool\" data-card-widget=\"collapse\"><i class=\"fa fa-minus\"></i></button>'));\n              config.collapsible = true;\n            }\n          }\n        }\n      }\n      if (value.options.hasOwnProperty(\"closable\")) {\n        if (value.options.closable !== config.closable) {\n          if (!value.options.closable) {\n            $(el).find('[data-card-widget = \"remove\"]').remove();\n            config.closable = false;\n          } else {\n            if ($(el).find('[data-card-widget = \"remove\"]').length === 0) {\n              $(el)\n                .find(\".card-tools.pull-right\")\n                .append($('<button class=\"btn btn-tool\" data-card-widget=\"remove\"><i class=\"fa fa-times\"></i></button>'));\n              config.closable = true;\n            }\n          }\n        }\n      }\n\n      if (value.options.hasOwnProperty(\"maximizable\")) {\n        if (value.options.maximizable !== config.maximizable) {\n          if (!value.options.maximizable) {\n            $(el).find('[data-card-widget = \"maximize\"]').remove();\n            config.maximizable = false;\n          } else {\n            if ($(el).find('[data-card-widget = \"maximize\"]').length === 0) {\n              $(el)\n                .find(\".card-tools.pull-right\")\n                .append($('<button class=\"btn btn-tool\" data-card-widget=\"maximize\"><i class=\"fa fa-expand\"></i></button>'));\n              config.maximizable = true;\n            }\n          }\n        }\n      }\n\n      // handle HTML tags (harder)\n      if (value.options.hasOwnProperty(\"title\")) {\n        if (value.options.title !== config.title) {\n          var newTitle = $.parseHTML(value.options.title);\n          // social box\n          if (isSocialCard) {\n            $(el).find(\".user-block\").replaceWith($(newTitle));\n          } else if (isUserCard) {\n            var tools = $(el).find('.card-tools');\n            // handle 2 cards types\n            if (newTitle.length === 3) {\n              // don't take newTitle[1] (contains some text)\n              newTitle = [newTitle[0], newTitle[2]];\n              // change widget-use class \n              $(el)\n                .removeClass('widget-user-2')\n                .addClass('widget-user');\n              // insert header and image after\n              $(el).find('.widget-user-header').replaceWith($(newTitle[0]));\n              $(newTitle[1]).insertAfter($(el).find('.widget-user-header'));\n\n            } else {\n              $(el)\n                .removeClass('widget-user')\n                .addClass('widget-user-2');\n              $(el).find('.widget-user-header').replaceWith($(newTitle));\n              if (value.options.status !== null) {\n                if (value.options.gradient) {\n                  $(el).find('.widget-user-header').addClass('bg-gradient-', status);\n                } else {\n                  $(el).find('.widget-user-header').addClass('bg-', status);\n                }\n              }\n            }\n            // add tools as first child of widget-user-header\n            $(el).find('.widget-user-header').prepend($(tools));\n          } else {\n            $(el).find(\".card-title\").replaceWith($(newTitle));\n          }\n        }\n      }\n\n      // replace the old JSON config by the new one to update the input value \n      $(el).parent().find(\"script[data-for='\" + el.id + \"']\").replaceWith(\n        '<script type=\"application/json\" data-for=\"' + el.id + '\">' + JSON.stringify(config) + '</script>'\n      );\n    } else {\n      if (value != \"restore\") {\n        if ($(el).css('display') != 'none') {\n          $(el).CardWidget(value);\n        }\n      } else {\n        $(el).show();\n        // this is needed so that the last event handler is considered\n        // in the subscribe method. \n        $(el).trigger(\"shown\");\n      }\n    }\n  },\n  receiveMessage: function (el, data) {\n    this.setValue(el, data);\n    $(el).trigger('change');\n  },\n\n  subscribe: function (el, callback) {\n    $(el).on('expanded.lte.cardwidget collapsed.lte.cardwidget', function (e) {\n      // set a delay so that SHiny get the input value when the collapse animation\n      // is finished. \n      setTimeout(\n        function () {\n          callback();\n        }, 500);\n    });\n\n    $(el).on('maximized.lte.cardwidget minimized.lte.cardwidget', function (e) {\n      callback();\n    });\n\n    $(el).on('removed.lte.cardwidget', function (e) {\n      setTimeout(\n        function () {\n          callback();\n        }, 500);\n    });\n    // we need to split removed and shown event since shown is immediate whereas close\n    // takes some time\n    $(el).on('shown.cardBinding', function (e) {\n      callback();\n    });\n\n    // handle change event triggered in the setValue method \n    $(el).on('change.cardBinding', function (event) {\n      setTimeout(function () {\n        callback();\n      }, 500);\n    });\n  },\n\n  unsubscribe: function (el) {\n    $(el).off(\".cardBinding\");\n  }\n});\n\nShiny.inputBindings.register(cardBinding);\n\n\n\n// Card sidebar input binding\nvar cardSidebarBinding = new Shiny.InputBinding();\n$.extend(cardSidebarBinding, {\n  \n  initialize: function(el) {\n    // erase default to avoid seeing moving sidebars on initialization\n  $('.direct-chat-contacts, .direct-chat-messages').css({'transition': 'transform .0s ease-in-out'});\n  \n  var background = $(el).attr('data-background') ? $(el).attr('data-background') : '#343a40';\n    var width = $(el).attr('data-width') ? parseInt($(el).attr('data-width')) : 100;\n    var closeTranslationRate =  100 * 100 / width;\n    var contacts = $(el).closest('.direct-chat').find('.direct-chat-contacts');\n    \n    // apply width and background\n    $(contacts).css({\n      'background': `${background}`,\n      'width': `${width}%`\n    });\n    \n    // If start open, apply openTranslationRate else apply closeTranslationRate ...\n    if ($(el).attr('data-start-open') === \"true\") {\n      var openTranslationRate = closeTranslationRate - 100;\n      $(contacts).css({'transform': `translate(${openTranslationRate}%, 0)`});\n    } else {\n      $(contacts).css({'transform': `translate(${closeTranslationRate}%, 0)`});\n    }\n  \n    // Restore for better transitions\n    setTimeout(function() {\n      $('.direct-chat-contacts, .direct-chat-messages').css({'transition': 'transform .5s ease-in-out'});\n    }, 300);\n  },\n  \n  find: function (scope) {\n    return $(scope).find('[data-widget=\"chat-pane-toggle\"]');\n  },\n\n  // Given the DOM element for the input, return the value\n  getValue: function (el) {\n    var cardWrapper = $(el).closest(\".card\");\n    return $(cardWrapper).hasClass(\"direct-chat-contacts-open\");\n  },\n\n  // see updatebs4Card\n  receiveMessage: function (el, data) {\n    // In theory, adminLTE3 has a builtin function\n    // we could use $(el).DirectChat('toggle');\n    // However, it does not update the related input.\n    // The toggled.lte.directchat event seems to be broken.\n    $(el).trigger('click');\n    $(el).trigger(\"shown\");\n  },\n\n  subscribe: function (el, callback) {\n    var self = this;\n    $(el).on('click', function (e) {\n      var width = $(el).attr('data-width') ? parseInt($(el).attr('data-width')) : 100;\n      var closeTranslationRate =  100 * 100 / width;\n      var openTranslationRate = closeTranslationRate - 100;\n      // set a delay so that Shiny get the input value when the collapse animation\n      // is finished. \n      var target = e.currentTarget;\n      setTimeout(\n        function (e = target) {\n          // apply correct translation rate depending on current state\n          var contacts = $(e).closest('.direct-chat').find('.direct-chat-contacts');\n          if (self.getValue(el)) {\n            $(contacts).css({'transform': `translate(${openTranslationRate}%, 0)`});\n          } else {\n            $(contacts).css({'transform': `translate(${closeTranslationRate}%, 0)`});\n          }\n          callback();\n        }, 10);\n    });\n  },\n\n  unsubscribe: function (el) {\n    $(el).off(\".cardSidebarBinding\");\n  }\n});\n\nShiny.inputBindings.register(cardSidebarBinding);","$(function() {\n  \n  // required to show a toast when the controlbar is pinned \n  // for the first time. Show once since it may be annoying ...\n  var showToast = true;\n  const controlbarToast = () => {\n    if (showToast) {\n      $(document).Toasts('create', {\n        title: 'Controlbar is pinned',\n        close: false,\n        autohide: true,\n        delay: 2000\n      });\n      showToast = false; \n    }\n  };\n\n  // This prevent box content from going outside their container \n  // when the control-bar is on push mode\n  $(\"#controlbar-toggle\").on(\"click\",\n    function() {\n      if ($(\"body\").hasClass(\"control-sidebar-push-slide\")) {\n        $(window).trigger(\"resize\"); \n      }\n  });\n  \n  \n  // The code below hande the click out of the right control bar\n  $(window).click(function(e) { \n    // There is a potential conflict. This function detect any click outside\n    // the controlbar and close if if it is not pinned. Yet, if we click on an action       // button controlling the controlbar state (see updatebs4Controlbar), it is also outside the controlbar so the toggle event will be triggered twice. The controlbar will never close as shown in https://github.com/RinteRface/bs4Dash/issues/110. Below we make sure to leave the function as soon as a click on a button holding the class action button. This is not really a fix but a reasonable workaround.\n    var isActionButton = $(e.target).hasClass(\"action-button\");\n    if (isActionButton) return null;\n      \n    if($(\"aside.control-sidebar\").find(e.target).length === 0) {\n      var pinned = $(\".control-sidebar\").attr(\"data-pin\");\n      if (pinned === \"false\" || pinned === undefined) {\n        $(\"body\").removeClass(\"control-sidebar-slide-open\");  \n        // don't forget to refresh the input binding\n        $(\"#controlbar-toggle\").trigger('collapsed.lte.controlsidebar');\n      }\n    }  \n  });\n  \n  // handle the pin button: toggle data-pin state\n  $(\"#controlbarPin\").on('click', function() {\n    var $pinIcon = $(this).children();\n    $pinIcon.toggleClass(\"fa-rotate-90 fa-lg\");\n    \n    $(\".control-sidebar\").attr(\"data-pin\",\n       $(\".control-sidebar\").attr(\"data-pin\") == \"false\" ? \"true\" : \"false\");\n    // toggle right sidebar control depending on the datapin\n    if ($(\".control-sidebar\").attr(\"data-pin\") === \"true\") {\n      $pinIcon.css(\"color\", \"#007bff\");\n      $(\"#controlbar-toggle\").addClass(\"disabled\");\n      controlbarToast();\n    } else {\n      $(\"#controlbar-toggle\").removeClass(\"disabled\");\n      $pinIcon.css(\"color\", \"\");\n    }\n  });\n\n\nvar init = true;\n\n  // Input binding\n  var controlbarBinding = new Shiny.InputBinding();\n  \n  $.extend(controlbarBinding, {\n  \n    find: function(scope) {\n      return $(scope).find(\".control-sidebar\");\n    },\n  \n    // Given the DOM element for the input, return the value\n    getValue: function(el) {\n      // Handles the pin \n      var controlbarOpen = $(\"body\").hasClass(\"control-sidebar-slide-open\");\n      var pinned = $(el).attr(\"data-pin\") === \"true\";\n      if (controlbarOpen && pinned && init) {\n        $(\"#controlbar-toggle\").addClass(\"disabled\");\n        $(\"#controlbarPin\")\n          .children()\n          .css(\"color\", \"#007bff\");\n        controlbarToast();\n        init = false;\n      }\n      \n      // this handles the case where the controlbar is not collapsed at start\n      var controlbarCollapsed = $(el).attr('data-collapsed');\n      if (controlbarCollapsed === \"false\") {\n        $(\"#controlbar-toggle\").ControlSidebar('toggle');\n        $(el).attr('data-collapsed', \"true\");\n        return true;\n      } else {\n        return $(\"body\").hasClass(\"control-sidebar-slide-open\");\n      }\n    },\n    // see updatebs4Controlbar\n    receiveMessage: function(el, data) {\n      $(\"#controlbar-toggle\").ControlSidebar('toggle');\n    },\n  \n    subscribe: function(el, callback) {\n      $(\"#controlbar-toggle\").on(\"collapsed.lte.controlsidebar expanded.lte.controlsidebar\", function(e) {\n        $(el).trigger('shown');\n        // add a delay so that Shiny get the input value \n        // after the AdminLTE3 animation is finished!\n        setTimeout(\n          function() {\n            callback();\n          }, 10);\n      });\n    },\n  \n    unsubscribe: function(el) {\n      $(el).off(\".controlbarBinding\");\n    }\n  });\n  \n  Shiny.inputBindings.register(controlbarBinding, \"bs4Dash.controlbarBinding\");\n  \n  // handle controlbar overlay\n  var controlbarOverlay = $('.control-sidebar').attr('data-overlay');\n  if (controlbarOverlay === \"false\") {\n    $('body').addClass('control-sidebar-push-slide');\n  }\n\n});","$(function () {\n  // handle tooltip from the server side\n  Shiny.addCustomMessageHandler('create-tooltip', function (message) {\n    var tooltipTarget;\n    if (message.id) {\n      tooltipTarget = '#' + message.id;\n    } else {\n      if (message.selector) {\n        tooltipTarget = message.selector;\n      }\n    }\n    $(tooltipTarget)\n      .addClass('has-tooltip')\n      .tooltip(message.options);\n    console.log(`'Tooltip created for ${tooltipTarget}'`);\n  });\n\n  Shiny.addCustomMessageHandler('remove-tooltip', function (message) {\n    var tooltipTarget = '#' + message;\n\n    // only destroys if popover exists\n    if ($(tooltipTarget).hasClass('has-tooltip')) {\n      $(tooltipTarget)\n        .removeClass('has-tooltip')\n        .tooltip('dispose');\n      console.log(`'Tooltip destroyed for ${tooltipTarget}'`);\n    }\n  });\n\n  // handle popover from the server side\n  Shiny.addCustomMessageHandler('create-popover', function (message) {\n    var popoverTarget;\n    if (message.id) {\n      popoverTarget = '#' + message.id;\n    } else {\n      if (message.selector) {\n        popoverTarget = message.selector;\n      }\n    }\n    // indicate target has popover. This is for removePopover to know\n    // whether the popover exists\n    $(popoverTarget)\n      .addClass('has-popover')\n      .popover(message.options);\n    console.log(`'Popover created for ${popoverTarget}'`);\n  });\n\n\n  Shiny.addCustomMessageHandler('remove-popover', function (message) {\n    var popoverTarget = '#' + message;\n\n    // only destroys if popover exists\n    if ($(popoverTarget).hasClass('has-popover')) {\n      $(popoverTarget)\n        .removeClass('has-popover')\n        .popover('dispose');\n      console.log(`'Popover destroyed for ${popoverTarget}'`);\n    }\n  });\n\n\n  // handle builtin toasts\n  Shiny.addCustomMessageHandler('toast', function (message) {\n    $(document).Toasts('create', message);\n  });\n\n  // Create an alert\n  Shiny.addCustomMessageHandler('create-alert', function (message) {\n    // setup target\n    var alertTarget;\n    if (message.id) {\n      alertTarget = `#${message.id}`;\n    } else {\n      if (message.selector) {\n        alertTarget = message.selector;\n      }\n    }\n\n    // build the tag from options\n    var config = message.options, alertCl, alertTag, iconType, closeButton, titleTag, contentTag;\n    alertCl = 'alert alert-dismissible';\n    if (config.status !== undefined) {\n      alertCl = `${alertCl} alert-${config.status}`;\n    }\n    if (config.elevation !== undefined) {\n      alertCl = `${alertCl} elevation-${config.elevation}`;\n    }\n\n    switch (config.status) {\n      case 'primary': iconType = 'info';\n        break;\n      case 'danger': iconType = 'ban';\n        break;\n      case 'info': iconType = 'info';\n        break;\n      case 'warning': iconType = 'warning';\n        break;\n      case 'success': iconType = 'check';\n        break;\n      default: console.warn(`${config.status} does not belong to allowed statuses!`)\n    }\n\n    if (config.closable) {\n      closeButton = '<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-hidden=\"true\">x</button>'\n    }\n\n    titleTag = `<h5><i class=\"icon fa fa-${iconType}\"></i></h5>`\n    contentTag = config.content;\n\n    alertTag = `<div \n      id=\"${message.id}-alert\" \n      class=\"${alertCl}\">\n        ${closeButton}${titleTag}${contentTag}\n    </div>`\n    if (config.width !== undefined) {\n      alertTag = `<div class=\"col-sm-${config.width}\">${alertTag}</div>`\n    }\n\n    // add it to the DOM if no existing alert is found in the anchor\n    if ($(`#${message.id}-alert`).length === 0) {\n      $(alertTarget).append(alertTag);\n      Shiny.setInputValue(message.id, true, { priority: 'event' });\n\n      // add events only after element is inserted\n\n      // callback -> give ability to perform more actions on the Shiny side\n      // once the alert is closed\n      $(`#${message.id}-alert`).on('closed.bs.alert', function () {\n        Shiny.setInputValue(message.id, false, { priority: 'event' });\n      });\n      // Clicking on close button does not trigger any event.\n      // Trigger the closed.bs.alert event.\n      $('[data-dismiss=\"alert\"]').on('click', function () {\n        var alertId = $(this).parent.attr('id');\n        $(`#${alertId}.`).trigger('closed.bs.alert');\n      });\n\n    } else {\n      console.warn(`${alertTarget} already has an alert!`);\n    }\n  });\n\n\n  Shiny.addCustomMessageHandler('close-alert', function (message) {\n    // only closes if element exists\n    if ($(`#${message}-alert`).length > 0) {\n      $(`#${message}-alert`).alert('close');\n    } else {\n      console.warn('Nothing to delete!');\n    }\n  });\n});","// When document is ready, if there is a sidebar menu with no activated tabs,\n// activate the one specified by `data-start-selected`, or if that's not\n// present, the first one.\nvar ensureActivatedTab = function() {\n  // get the selected tabs\n  var $tablinks = $(\".sidebar-menu a[data-toggle='tab']\");\n\n  // If there are no tabs, $startTab.length will be 0.\n  var $startTab = $tablinks.filter(\"[data-start-selected='1']\");\n  if ($startTab.length === 0) {\n    // If no tab starts selected, use the first one, if present\n    $startTab = $tablinks.first();\n  }\n\n  // If there's a `data-start-selected` attribute and we can find a tab with\n  // that name, activate it.\n  if ($startTab.length !== 0) {\n    // This is just in case the user renders the tabs in a renderUI that does not\n    // print immediately in the DOM. We need a bit of a delay before telling which\n    // tab to show ...\n    if ($(\".sidebar-menu\").hasClass(\"bs4Dash-menu-output\")) {\n      setTimeout(function() {\n        // we need to initialize any treeview elements that were not inserted\n        // in the DOM when adminlte was first initialized!\n        adminlte.Treeview._jQueryInterface.call($('[data-widget=\"treeview\"]'), 'init');\n\n        $startTab.tab(\"show\");\n      }, 10);\n    } else {\n      $startTab.tab(\"show\");\n    }\n    \n\n    // This is indirectly setting the value of the Shiny input by setting\n    // an attribute on the html element it is bound to. We cannot use the\n    // inputBinding's setValue() method here because this is called too\n    // early (before Shiny has fully initialized)\n    $(\".sidebarMenuSelectedTabItem\").attr(\n      \"data-value\",\n      $startTab.attr(\"data-value\")\n    );\n  }\n};\n\n// This function handles a special case in the AdminLTE sidebar: when there\n// is a sidebar-menu with items, and one of those items has sub-items, and\n// they are used for tab navigation. Normally, if one of the items is\n// selected and then a sub-item is clicked, both the item and sub-item will\n// retain the \"active\" class, so they will both be highlighted. This happens\n// because they're not designed to be used together for tab panels. This\n// code ensures that only one item will have the \"active\" class.\nvar deactivateOtherTabs = function() {\n  // Find all tab links under sidebar-menu even if they don't have a\n  // tabName (which is why the second selector is necessary)\n  var $tablinks = $(\n    \".sidebar-menu a[data-toggle='tab'],\" + \".sidebar-menu li.has-treeview > a\"\n  );\n\n  // If any other items are active, deactivate them\n  $tablinks.not($(this)).removeClass(\"active\");\n\n  // also manually activate the parent link when the selected item\n  // is part of a treeview. For some reason, this is not done by AdminLTE3...\n  if ($(this).hasClass(\"treeview-link\")) {\n    $(this)\n      .parents(\".has-treeview\")\n      .children()\n      .eq(0)\n      .addClass(\"active\");\n  }\n\n  // Trigger event for the tabItemInputBinding\n  var $obj = $(\".sidebarMenuSelectedTabItem\");\n  var inputBinding = $obj.data(\"shiny-input-binding\");\n  if (typeof inputBinding !== \"undefined\") {\n    inputBinding.setValue($obj, $(this).attr(\"data-value\"));\n    $obj.trigger(\"change\");\n  }\n};\n\n$(function() {\n  // Whenever the sidebar finishes a transition (which it does every time it\n  // changes from collapsed to expanded and vice versa), trigger resize,\n  // so that all outputs are resized.\n  $(\".main-sidebar\").on(\n    \"webkitTransitionEnd otransitionend oTransitionEnd msTransitionEnd transitionend\",\n    function() {\n      $(window).trigger(\"resize\");\n    }\n  );\n\n  $(document).on(\n    \"shown.bs.tab\",\n    '.sidebar-menu a[data-toggle=\"tab\"]',\n    deactivateOtherTabs\n  );\n\n  ensureActivatedTab();\n\n  // Whenever we expand a menuItem (to be expandable, it must have children),\n  // update the value for the expandedItem's input binding (this is the\n  // tabName of the fist subMenuItem inside the menuItem that is currently\n  // expanded)\n  $(document).on(\"click\", \".has-treeview\", function() {\n    var $menu = $(this);\n    // If this menuItem was already open, then clicking on it again,\n    // should trigger the \"hidden\" event, so Shiny doesn't worry about\n    // it while it's hidden (and vice versa).\n    if ($menu.hasClass(\"menu-open\")) $menu.trigger(\"collapsed.lte.treeview\");\n    else if ($menu.hasClass(\".has-treeview\"))\n      $menu.trigger(\"expanded.lte.treeview\");\n\n    // need to set timeout to account for the slideUp/slideDown animation\n    var $obj = $(\".sidebar.shiny-bound-input\");\n    setTimeout(function() {\n      $obj.trigger(\"change\");\n    }, 600);\n  });\n\n  //---------------------------------------------------------------------\n  // tabItemInputBinding\n  // ------------------------------------------------------------------\n  // Based on Shiny.tabItemInputBinding, but customized for tabItems in\n  // bs4Dash, which have a slightly different structure.\n  var tabItemInputBinding = new Shiny.InputBinding();\n  $.extend(tabItemInputBinding, {\n    find: function(scope) {\n      return $(scope).find(\".sidebarMenuSelectedTabItem\");\n    },\n    getValue: function(el) {\n      var value = $(el).attr(\"data-value\");\n      if (value === \"null\") return null;\n      return value;\n    },\n    setValue: function(el, value) {\n      var self = this;\n      var anchors = $(el)\n        .parent(\".sidebar-menu\")\n        .find(\"li:not(.treeview)\")\n        .children(\"a\");\n      anchors.each(function() {\n        // eslint-disable-line consistent-return\n        if (self._getTabName($(this)) === value) {\n          $(this).tab(\"show\");\n          // this make sure that treeview items are open when we\n          // use the updatebs4TabItems function on the server side\n          if ($(this).hasClass(\"treeview-link\")) {\n            if (\n              !$(this)\n                .parents(\".has-treeview\")\n                .hasClass(\"menu-open\")\n            ) {\n              $(this)\n                .parents(\".has-treeview\")\n                .children()\n                .eq(0)\n                .trigger(\"click\");\n            }\n          }\n          $(el).attr(\"data-value\", self._getTabName($(this)));\n          return false;\n        }\n      });\n    },\n    receiveMessage: function(el, data) {\n      if (data.hasOwnProperty(\"value\")) this.setValue(el, data.value);\n    },\n    subscribe: function(el, callback) {\n      // This event is triggered by deactivateOtherTabs, which is triggered by\n      // shown. The deactivation of other tabs must occur before Shiny gets the\n      // input value.\n      $(el).on(\"change.tabItemInputBinding\", function() {\n        callback();\n      });\n    },\n    unsubscribe: function(el) {\n      $(el).off(\".tabItemInputBinding\");\n    },\n    _getTabName: function(anchor) {\n      return anchor.attr(\"data-value\");\n    }\n  });\n\n  Shiny.inputBindings.register(tabItemInputBinding, \"bs4Dash.tabItemInput\");\n\n  //---------------------------------------------------------------------\n  // sidebarInputBinding\n  // ------------------------------------------------------------------\n  // similar to controlbarInputBinding\n  var sidebarBinding = new Shiny.InputBinding();\n\n  $.extend(sidebarBinding, {\n    find: function(scope) {\n      return $(scope).find(\".main-sidebar\");\n    },\n\n    // Given the DOM element for the input, return the value\n    getValue: function(el) {\n      // Warning: we can't look for sidebar-open since this\n      // class is only generated on mobile devices\n      return !$(\"body\").hasClass(\"sidebar-collapse\");\n    },\n\n    // see updatebs4Controlbar\n    receiveMessage: function(el, data) {\n      $(\"[data-widget='pushmenu']\").PushMenu(\"toggle\");\n    },\n\n    subscribe: function(el, callback) {\n      $(\"[data-widget='pushmenu']\").on(\n        \"collapsed.lte.pushmenu.sidebarBinding shown.lte.pushmenu.sidebarBinding\",\n        function(e) {\n          callback();\n        }\n      );\n    },\n\n    unsubscribe: function(el) {\n      $(el).off(\".sidebarBinding\");\n    }\n  });\n\n  Shiny.inputBindings.register(sidebarBinding, \"bs4Dash.sidebarInput\");\n\n  // sidebarmenuExpandedInputBinding\n  // ------------------------------------------------------------------\n  // This keeps tracks of what menuItem (if any) is expanded\n  var sidebarmenuExpandedInputBinding = new Shiny.InputBinding();\n  $.extend(sidebarmenuExpandedInputBinding, {\n    find: function(scope) {\n      // This will also have id=\"sidebarItemExpanded\"\n      return $(scope).find(\".sidebar\");\n    },\n    getValue: function(el) {\n      var $open = $(el)\n        .find(\"li\")\n        .filter(\".menu-open\")\n        .find(\"ul\");\n      if ($open.length === 1) return $open.attr(\"data-expanded\");\n      else return null;\n    },\n    setValue: function(el, value) {\n      // does not work (nothing is printed)\n      var $menuItem = $(el).find(\"[data-expanded='\" + value + \"']\");\n      // This will trigger actions defined by AdminLTE, as well as actions\n      // defined in sidebar.js.\n      $menuItem.prev().trigger(\"click\");\n    },\n    subscribe: function(el, callback) {\n      $(el).on(\"change.sidebarmenuExpandedInputBinding\", function() {\n        callback();\n      });\n    },\n    unsubscribe: function(el) {\n      $(el).off(\".sidebarmenuExpandedInputBinding\");\n    }\n  });\n  Shiny.inputBindings.register(\n    sidebarmenuExpandedInputBinding,\n    \"bs4Dash.sidebarmenuExpandedInputBinding\"\n  );\n\n  // handle fixed sidebar\n  if ($(\".main-sidebar\").attr(\"data-fixed\") === \"true\") {\n    $(\"body\").addClass(\"layout-fixed\");\n    //$('body').Layout('fixLayoutHeight');\n  }\n\n  // toggle sidebar at start depending on the body class\n  var sidebarCollapsed = $(\".main-sidebar\").attr(\"data-collapsed\");\n  if (sidebarCollapsed === \"true\") {\n    // This triggers binding geValue\n    $(\"[data-widget='pushmenu']\").PushMenu(\"toggle\");\n  }\n\n  var sidebarMinified = $(\".main-sidebar\").attr(\"data-minified\");\n  if (sidebarMinified === \"true\") {\n    $(\"body\").addClass(\"sidebar-mini\");\n  }\n});\n","$(function () {\n\n  $navbar = $('.main-header.navbar');\n\n  // Modify the shiny tabsetpanel binding to follow BS4 rules\n  $(document).on('shiny:connected', function (event) {\n    Shiny.unbindAll();\n    $.extend(Shiny\n      .inputBindings\n      .bindingNames['shiny.bootstrapTabInput']\n      .binding, {\n      // do whathever you want to edit existing methods\n      getValue: function (el) {\n        var anchor = $(el).find('li:not(.dropdown)').children('a.active');\n        if (anchor.length === 1)\n          return this._getTabName(anchor);\n\n        return null;\n      }\n    });\n    Shiny.bindAll();\n  });\n\n  // Make the dashboard widgets sortable Using jquery UI\n  $('.connectedSortable').sortable({\n    placeholder: 'sort-highlight',\n    connectWith: '.connectedSortable',\n    handle: '.card-header, .nav-tabs',\n    forcePlaceholderSize: true,\n    zIndex: 999999\n  });\n  $('.connectedSortable .card-header, .connectedSortable .nav-tabs-custom').css('cursor', 'move');\n  \n\n  // footer has fixed layout?\n  if ($(\".main-footer\").attr(\"data-fixed\") === \"true\") {\n    $(\"body\").addClass(\"layout-footer-fixed\");\n  }\n\n  // add dropdown-menu-right class to correctly open the dropdown to all \n  // navbar rightUi elements\n  var navbarRight = $('.navbar-right').find('.dropdown-menu');\n  $(navbarRight).each(function () {\n    if (!$(this).hasClass('dropdown-menu-right')) {\n      $(this).addClass('dropdown-menu-right');\n    }\n  });\n\n\n  // data toggle collapse icon update\n  $('.user-block [data-toggle=\"collapse\"]').on('click', function () {\n    if ($(this).children('i').hasClass('fa-plus')) {\n      $(this).children('i').attr('class', 'fa fa-minus');\n    } else {\n      $(this).children('i').attr('class', 'fa fa-plus');\n    }\n  });\n\n  // fullscreen toggle\n  if ($('body').attr('data-fullscreen') == 1) {\n    var fullScreenToggle = `<li class=\"nav-item\">\n      <a class=\"nav-link\" data-widget=\"fullscreen\" href = \"#\" role = \"button\" >\n        <i class=\"fas fa-expand-arrows-alt\"></i>\n      </a>\n    </li > `;\n    $(fullScreenToggle).insertBefore($('[data-widget=\"control-sidebar\"]').parent());\n  }\n\n  // slide to top button\n  if ($('body').attr('data-scrollToTop') == 1) {\n    var $slideToTop = $('<div />');\n\n    $slideToTop.html('<i class=\"fa fa-chevron-up\"></i>');\n\n    $slideToTop.css({\n      position: 'fixed',\n      bottom: '20px',\n      right: '25px',\n      width: '40px',\n      height: '40px',\n      color: '#eee',\n      'font-size': '',\n      'line-height': '40px',\n      'text-align': 'center',\n      'background-color': '#222d32',\n      cursor: 'pointer',\n      'border-radius': '5px',\n      'z-index': '99999',\n      opacity: '.7',\n      'display': 'none'\n    });\n\n    $slideToTop.on('mouseenter', function () {\n      $(this).css('opacity', '1');\n    });\n\n    $slideToTop.on('mouseout', function () {\n      $(this).css('opacity', '.7');\n    });\n\n    $('.wrapper').append($slideToTop);\n\n    $(window).scroll(function () {\n      if ($(window).scrollTop() >= 150) {\n        if (!$($slideToTop).is(':visible')) {\n          $($slideToTop).fadeIn(500);\n        }\n      } else {\n        $($slideToTop).fadeOut(500);\n      }\n    });\n\n    $($slideToTop).click(function () {\n      $('html, body').animate({\n        scrollTop: 0\n      }, 500);\n    });\n  }\n  \n  // nav item click also triggers scroll to top\n  $('.main-sidebar .nav-item').on('click', function () {\n    $('html, body').animate({\n      scrollTop: 0\n    }, 0);\n  }); \n\n\n  // tooltip/popover toggle\n  if ($('body').attr('data-help') == 1) {\n    var $help_switch_checkbox = $('<input />', {\n      type: 'checkbox',\n      id: 'help_switch',\n      class: 'custom-control-input'\n    }).on('click', function () {\n      if ($(this).is(':checked')) {\n        $('[data-toggle=\"tooltip\"]').tooltip('enable');\n        $('[data-toggle=\"popover\"]').popover({\n          trigger: 'hover'\n        });\n        $('[data-toggle=\"popover\"]').popover('enable');\n      } else {\n        $('[data-toggle=\"tooltip\"]').tooltip('disable');\n        $('[data-toggle=\"popover\"]').popover('disable');\n      }\n    });\n\n    var $help_switch_container = $('<div />', { class: 'custom-control custom-switch mx-2' }).append($help_switch_checkbox).append(`<label class=\"custom-control-label\" for=\"help_switch\"><i class=\"fa fa-question\"></i></label>`);\n    $navbar.append($help_switch_container);\n\n    // trigger first click, if necessary\n\n    $help_switch_checkbox.click();\n  }\n\n  // dark mode input\n  $(document).one('shiny:connected', function () {\n    if ($('body').hasClass('dark-mode')) {\n      Shiny.setInputValue('dark_mode', true, { priority: 'event' });\n    } else {\n      Shiny.setInputValue('dark_mode', false, { priority: 'event' });\n    }\n  });\n\n\n  // Navbar colors\n  getNavbarColor = function () {\n    for (let color of navbar_all_colors) {\n      if ($('.main-header').attr('class').search(color) > -1) {\n        return color;\n      }\n    }\n  };\n\n  var navbar_dark_skins = [\n    'navbar-primary',\n    'navbar-secondary',\n    'navbar-info',\n    'navbar-success',\n    'navbar-danger',\n    'navbar-indigo',\n    'navbar-purple',\n    'navbar-pink',\n    'navbar-maroon',\n    'navbar-fuchsia',\n    'navbar-navy',\n    'navbar-lightblue',\n    'navbar-lime',\n    'navbar-teal',\n    'navbar-olive',\n    'navbar-gray-dark',\n    'navbar-gray'\n  ];\n\n  var navbar_light_skins = [\n    'navbar-warning',\n    'navbar-white',\n    'navbar-orange'\n  ];\n\n  var navbar_all_colors = navbar_dark_skins.concat(navbar_light_skins);\n  // find navbar color\n  var navbarColor;\n\n  // automatic global theme switcher\n  if ($('body').attr('data-dark') == 1) {\n    var $dark_mode_checkbox = $('<input />', {\n      type: 'checkbox',\n      id: 'customSwitch1',\n      class: 'custom-control-input'\n    }).on('click', function () {\n\n      // get any selected navbar skin in the navbar themer\n      var newNavbarColor;\n      $('.navbar-themer-chip').filter(function () {\n        if ($(this).css('border-style') === 'solid') {\n          newNavbarColor = 'navbar-' +\n            $(this)\n              .attr('class')\n              .split('elevation-2')[0]\n              .trim()\n              .replace('bg-', '');\n        }\n      });\n\n      if ($(this).is(':checked')) {\n        $('body').addClass('dark-mode');\n\n        // use updateNavbarTheme to correctly setup the skin as depending\n        // on the required color. If no color is chosen, we use gray-dark for dark mode\n        if (newNavbarColor === undefined) {\n          newNavbarColor = \"navbar-gray-dark\";\n        }\n        updateNavbarTheme(newNavbarColor);\n\n        // sidebar update  \n        if ($('.main-sidebar').length > 0) {\n          $('.main-sidebar').attr('class', $('.main-sidebar')\n            .attr('class')\n            .replace('light', 'dark'));\n          $('#sidebar-skin').prop(\"checked\", true);\n\n          $('.sidebar-themer-icon')\n            .removeClass('fa-sun')\n            .addClass('fa-moon');\n        }\n\n        // controlbar update\n        if ($('.control-sidebar').length > 0) {\n          $('.control-sidebar').attr('class', $('.control-sidebar')\n            .attr('class')\n            .replace('light', 'dark'));\n          $('#controlbar-skin').prop(\"checked\", true);\n\n          $('.controlbar-themer-icon')\n            .removeClass('fa-sun')\n            .addClass('fa-moon');\n        }\n\n\n        $('.dark-theme-icon')\n          .removeClass('fa-sun')\n          .addClass('fa-moon');\n\n        // refresh shiny input value  \n        Shiny.setInputValue('dark_mode', true, { priority: 'event' });\n\n      } else {\n        $('body').removeClass('dark-mode');\n\n        // use updateNavbarTheme to correctly setup the skin as depending\n        // on the required color. If no color is chosen, we use white for light mode\n        if (newNavbarColor === undefined) {\n          newNavbarColor = \"navbar-white\";\n        }\n        updateNavbarTheme(newNavbarColor);\n\n        // sidebar update\n        if ($('.main-sidebar').length > 0) {\n          $('.main-sidebar').attr('class', $('.main-sidebar')\n            .attr('class')\n            .replace('dark', 'light'));\n          $('#sidebar-skin').prop(\"checked\", false);\n\n          $('.sidebar-themer-icon')\n            .removeClass('fa-moon')\n            .addClass('fa-sun');\n        }\n\n        // controlbar update\n        if ($('.control-sidebar').length > 0) {\n          $('.control-sidebar').attr('class', $('.control-sidebar')\n            .attr('class')\n            .replace('dark', 'light'));\n          $('#controlbar-skin').prop(\"checked\", false);\n\n          $('.controlbar-themer-icon')\n            .removeClass('fa-moon')\n            .addClass('fa-sun');\n        }\n\n        $('.dark-theme-icon')\n          .removeClass('fa-moon')\n          .addClass('fa-sun');\n\n        // refresh shiny input value  \n        Shiny.setInputValue('dark_mode', false, { priority: 'event' });\n      }\n    });\n\n    var $dark_mode_icon = $('body').hasClass('dark-mode') ? '<i class=\"dark-theme-icon fa fa-moon\"></i>' : '<i class=\"dark-theme-icon fa fa-sun\"></i>';\n    var $dark_mode_container = $('<div />', { class: 'custom-control custom-switch mx-2' }).append($dark_mode_checkbox).append(`<label class=\"custom-control-label\" for=\"customSwitch1\">${$dark_mode_icon}</label>`);\n    $navbar.append($dark_mode_container);\n    \n    // Trigger dark mode\n    $(document).on('shiny:connected', function() {\n      $('#customSwitch1').click();\n    });\n  }\n  \n\n  // Themer chips\n\n  // Better style on hover\n  $('.themer-chip').hover(function () {\n    $(this).css({ opacity: 1 }).removeClass('elevation-2').addClass('elevation-4');\n  }, function () {\n    $(this).css({ opacity: 0.8 }).removeClass('elevation-4').addClass('elevation-2');\n  });\n\n  // \n  $('.navbar-themer-chip').on('click', function () {\n    $(this).css({ 'border-color': 'yellow', 'border-style': 'solid' });\n    $('.navbar-themer-chip').not(this).css({ 'border-color': '', 'border-style': '' });\n  });\n\n  $('.accents-themer-chip').on('click', function () {\n    $(this).css({ 'border-color': 'yellow', 'border-style': 'solid' });\n    $('.accents-themer-chip').not(this).css({ 'border-color': '', 'border-style': '' });\n  });\n\n  $('.sidebar-themer-chip').on('click', function () {\n    $(this).css({ 'border-color': 'yellow', 'border-style': 'solid' });\n    $('.sidebar-themer-chip').not(this).css({ 'border-color': '', 'border-style': '' });\n  });\n\n\n  /**\n  * Update color theme to navbar tag\n  *\n  * @param String color Color to apply.\n  * @returns void\n  */\n  updateNavbarTheme = function (color) {\n    var $main_header = $('.main-header');\n    $main_header.removeClass('navbar-dark').removeClass('navbar-light');\n    navbar_all_colors.forEach(function (color) {\n      $main_header.removeClass(color);\n    });\n\n    if (navbar_dark_skins.indexOf(color) > -1) {\n      $main_header.addClass('navbar-dark');\n    } else {\n      $main_header.addClass('navbar-light');\n    }\n\n    $main_header.addClass(color);\n  };\n\n\n  // Sidebar themer\n\n  // detect global sidebar theme and select or not the toggle\n  if ($('.main-sidebar').length > 0) {\n    if ($('.main-sidebar').attr('class').match('dark')) {\n      $('#sidebar-skin').prop(\"checked\", true);\n    }\n  }\n\n  // clicking on dark/light switch changes:\n  // - icon style\n  // - sidebar class \n  $('#sidebar-skin').on('click', function () {\n    var sidebarCl;\n    if ($(this).is(':checked')) {\n      sidebarCl = $('.main-sidebar')\n        .attr('class')\n        .replace('light', 'dark');\n      $('.main-sidebar').attr('class', sidebarCl);\n\n      $('.sidebar-themer-icon')\n        .removeClass('fa-sun')\n        .addClass('fa-moon');\n    } else {\n      sidebarCl = $('.main-sidebar')\n        .attr('class')\n        .replace('dark', 'light');\n      $('.main-sidebar').attr('class', sidebarCl);\n\n      $('.sidebar-themer-icon')\n        .removeClass('fa-moon')\n        .addClass('fa-sun');\n    }\n  });\n\n  var sidebar_colors = [\n    'bg-primary',\n    'bg-secondary',\n    'bg-info',\n    'bg-success',\n    'bg-danger',\n    'bg-indigo',\n    'bg-purple',\n    'bg-pink',\n    'bg-maroon',\n    'bg-fuchsia',\n    'bg-navy',\n    'bg-lightblue',\n    'bg-lime',\n    'bg-teal',\n    'bg-olive',\n    'bg-gray-dark',\n    'bg-gray',\n    'bg-light',\n    'bg-warning',\n    'bg-white',\n    'bg-orange'\n  ];\n\n\n  var sidebar_skins = [\n    'sidebar-dark-primary',\n    'sidebar-dark-secondary',\n    'sidebar-dark-info',\n    'sidebar-dark-success',\n    'sidebar-dark-danger',\n    'sidebar-dark-indigo',\n    'sidebar-dark-purple',\n    'sidebar-dark-pink',\n    'sidebar-dark-maroon',\n    'sidebar-dark-fuchsia',\n    'sidebar-dark-navy',\n    'sidebar-dark-lightblue',\n    'sidebar-dark-lime',\n    'sidebar-dark-teal',\n    'sidebar-dark-olive',\n    'sidebar-dark-gray-dark',\n    'sidebar-dark-gray',\n    'sidebar-dark-light',\n    'sidebar-dark-warning',\n    'sidebar-dark-white',\n    'sidebar-dark-orange',\n    'sidebar-light-primary',\n    'sidebar-light-secondary',\n    'sidebar-light-info',\n    'sidebar-light-success',\n    'sidebar-light-danger',\n    'sidebar-light-indigo',\n    'sidebar-light-purple',\n    'sidebar-light-pink',\n    'sidebar-light-maroon',\n    'sidebar-light-fuchsia',\n    'sidebar-light-navy',\n    'sidebar-light-lightblue',\n    'sidebar-light-lime',\n    'sidebar-light-teal',\n    'sidebar-light-olive',\n    'sidebar-light-gray-dark',\n    'sidebar-light-gray',\n    'sidebar-light-light',\n    'sidebar-light-warning',\n    'sidebar-light-white',\n    'sidebar-light-orange'\n  ];\n\n\n  updateSidebarTheme = function (color) {\n    var sidebarCl;\n    if ($('#sidebar-skin').is(':checked')) {\n      sidebarCl = 'sidebar-dark-';\n    } else {\n      sidebarCl = 'sidebar-light-';\n    }\n\n    var sidebar_class = sidebarCl + color.replace('bg-', '');\n    var $sidebar = $('.main-sidebar');\n    sidebar_skins.forEach(function (skin) {\n      $sidebar.removeClass(skin);\n    });\n\n    $sidebar.addClass(sidebar_class);\n  };\n\n\n  // Accents themer\n  var accent_colors = [\n    'accent-primary',\n    'accent-secondary',\n    'accent-info',\n    'accent-success',\n    'accent-danger',\n    'accent-indigo',\n    'accent-purple',\n    'accent-pink',\n    'accent-maroon',\n    'accent-fuchsia',\n    'accent-navy',\n    'accent-lightblue',\n    'accent-lime',\n    'accent-teal',\n    'accent-olive',\n    'accent-gray-dark',\n    'accent-gray',\n    'accent-light',\n    'accent-warning',\n    'accent-white',\n    'accent-orange'\n  ];\n\n\n  updateAccentsTheme = function (color) {\n    var accent_class = color;\n    var $body = $('body');\n    accent_colors.forEach(function (skin) {\n      $body.removeClass(skin);\n    });\n\n    $body.addClass(accent_class);\n  };\n\n\n  // Controlbar themer\n\n  // detect global controlbar theme and select or not the toggle\n  if ($('.control-sidebar').length > 0) {\n    if ($('.control-sidebar').attr('class').match('dark')) {\n      $('#controlbar-skin').prop(\"checked\", true);\n    }\n  }\n\n  // clicking on dark/light switch changes:\n  // - icon style\n  // - sidebar class \n  $('#controlbar-skin').on('click', function () {\n    var controlbarCl;\n    if ($(this).is(':checked')) {\n      controlbarCl = $('.control-sidebar')\n        .attr('class')\n        .replace('light', 'dark');\n      $('.control-sidebar').attr('class', controlbarCl);\n\n      $('.controlbar-themer-icon')\n        .removeClass('fa-sun')\n        .addClass('fa-moon');\n    } else {\n      controlbarCl = $('.control-sidebar')\n        .attr('class')\n        .replace('dark', 'light');\n      $('.control-sidebar').attr('class', controlbarCl);\n\n      $('.controlbar-themer-icon')\n        .removeClass('fa-moon')\n        .addClass('fa-sun');\n    }\n  });\n\n});","$(function () {\n  // hide the right sidebar toggle \n  // if no right sidebar is specified\n  noControlbar = ($(\".control-sidebar\").length === 0);\n  if (noControlbar) {\n    $(\"#controlbar-toggle\").hide();\n  }\n\n  // hide the right sidebar toggle if the controlbar is disable\n  disableControlbar = ($(\".control-sidebar\").attr(\"data-show\"));\n  if (!disableControlbar) {\n    $(\"#controlbar-toggle\").hide();\n  }\n\n  // controlbar slide\n  controlbarSlide = ($(\".control-sidebar\").attr(\"data-slide\"));\n  if (controlbarSlide) {\n    $(\"#controlbar-toggle\").attr('data-controlsidebar-slide', controlbarSlide);\n  }\n\n  // when the sidebar is disabled, hide the sidebar toggle\n  disableSidebar = ($(\".main-sidebar\").length === 0);\n  if (disableSidebar) {\n    $(\".nav-item > a[data-widget='pushmenu']\").css(\"visibility\", \"hidden\");\n  }\n\n  // handle fixed navbar\n  if ($(\".navbar\").attr(\"data-fixed\") === \"true\") {\n    $(\"body\").addClass(\"layout-navbar-fixed\");\n  }\n\n});","var menuOutputBinding = new Shiny.OutputBinding();\n$.extend(menuOutputBinding, {\n  find: function (scope) {\n    return $(scope).find('.bs4Dash-menu-output');\n  },\n  onValueError: function (el, err) {\n    Shiny.unbindAll(el);\n    this.renderError(el, err);\n  },\n  renderValue: function (el, data) {\n    Shiny.unbindAll(el);\n\n    var html;\n    var dependencies = [];\n    if (data === null) {\n      return;\n    } else if (typeof (data) === 'string') {\n      html = data;\n    } else if (typeof (data) === 'object') {\n      html = data.html;\n      dependencies = data.deps;\n    }\n\n    var $html = $($.parseHTML(html));\n\n    // Convert the inner contents to HTML, and pass to renderHtml\n    Shiny.renderHtml($html.html(), el, dependencies);\n\n    // Extract class of wrapper, and add them to the wrapper element\n    el.className = 'bs4Dash-menu-output shiny-bound-output ' +\n      $html.attr('class');\n    \n    // need this to activate adminLTE3 plugin for treeview  \n    $(el)\n      .attr(\"data-widget\", \"treeview\")\n      .attr(\"role\", \"menu\")\n      .attr(\"data-accordion\", \"true\");\n\n    Shiny.initializeInputs(el);\n    Shiny.bindAll(el);\n    if ($(el).hasClass(\"sidebar-menu\")) ensureActivatedTab(); // eslint-disable-line\n  }\n});\nShiny.outputBindings.register(menuOutputBinding, \"bs4Dash.menuOutputBinding\");","// This code creates acustom handler for userMessages\nShiny.addCustomMessageHandler(\"user-messages\", function(message) {\n  var id = message.id, action = message.action, content = message.body, index = message.index;\n  \n  // message text\n  // We use Shiny.renderHtml to handle the case where the user pass input/outputs in the updated content that require a new dependency not available in the \n  // page at startup. \n  if (content.hasOwnProperty(\"text\")) {\n    var text;\n    if (content.text.html === undefined) {\n      text = content.text;\n    } else {\n      text = Shiny.renderHtml(content.text.html, $([]), content.text.deps).html;\n    } \n  }\n  \n  // unbind all\n  Shiny.unbindAll();\n  \n  if (action === \"remove\") {\n    $(\"#\" + id).find(\".direct-chat-msg\").eq(index - 1).remove();\n  } else if (action === \"add\") {\n    var author = content.author, date = content.date, image = content.image, type = content.type;\n    \n    // build the new message \n    var authorWrapper, dateWrapper;\n    if (type === \"sent\") {\n      authorWrapper = '<span class=\"direct-chat-name float-right\">' + author + '</span>';\n      dateWrapper = '<span class=\"direct-chat-timestamp float-left\">' + date + '</span>';\n    } else {\n      authorWrapper = '<span class=\"direct-chat-name float-left\">' + author + '</span>';\n      dateWrapper = '<span class=\"direct-chat-timestamp float-right\">' + date + '</span>';\n    }\n\n    var newMessage = `<div class=\"direct-chat-infos clearfix\">${authorWrapper}${dateWrapper}</div><img class=\"direct-chat-img\" src=\"${image}\"/><div class=\"direct-chat-text\">${text}</div>`;\n        \n    // build wrapper\n    var newMessageWrapper;\n    if (type === \"sent\") {\n      newMessageWrapper = '<div class=\"direct-chat-msg right\">' + newMessage + '</div>';\n    } else {\n      newMessageWrapper = '<div class=\"direct-chat-msg\">' + newMessage + '</div>';\n    }\n      \n    // append message\n    $(\"#\" + id).find(\".direct-chat-messages\").append(newMessageWrapper);\n  } else if (action === \"update\") {\n      \n    // today's date\n    var d = new Date();\n    var month = d.getMonth() + 1;\n    var day = d.getDate();\n    var today = d.getFullYear() + '/' +\n      ((''+month).length<2 ? '0' : '') + month + '/' +\n      ((''+day).length<2 ? '0' : '') + day;\n      \n    // we assume only text may be updated. Does not make sense to modify author/date\n    \n    $(\"#\" + id)\n      .find(\".direct-chat-text\")\n      .eq(index - 1)\n      .replaceWith('<div class=\"direct-chat-text\"><small class=\"text-red\">(modified: ' + today +')</small><br>' +  text + '</div>');\n  }\n    \n  // Calls .initialize() for all of the input objects in all input bindings,\n  // in the given scope (document)\n  Shiny.initializeInputs();\n  Shiny.bindAll(); // bind all inputs/outputs\n});"]}
